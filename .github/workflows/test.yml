AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create AWS resources


Resources:

  Yelpinbucket:
    Type: AWS::S3::Bucket
    DependsOn: LambdaInvokePermission
    Properties:
      BucketName: 'yelp-input-data-g3'
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt WorkflowLambda.Arn



  WorkflowLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import json
          import boto3

          def lambda_handler(event, context):
              glue = boto3.client('glue')
              response = glue.start_workflow_run(Name='yelpworkflow')
              print(response)
              return {
                  'statusCode': 200,
                  'body': json.dumps('Hello from AWS Lambda!')
              }

      Handler: index.lambda_handler
      Role: 'arn:aws:iam::742240590358:role/LabRole'  # Different for everyone, change the ARN
      Runtime: python3.8
      FunctionName: 'LambdaforWorkflow'

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    DependsOn: WorkflowLambda
    Properties:
      FunctionName: !GetAtt WorkflowLambda.Arn
      Action: lambda:InvokeFunction
      Principal: 's3.amazonaws.com'  # Corrected the principal
      SourceAccount: !Ref AWS::AccountId
      SourceArn: 'arn:aws:s3:::yelp-input-data-g3'  # Use GetAtt instead of Sub




#         S3InvokeLambdaPermission:
#     Type: AWS::Lambda::Permission
#     DependsOn:
#       - LambdaTrigger
#     Properties:
#       Action: lambda:InvokeFunction
#       FunctionName: !GetAtt LambdaTrigger.Arn
#       Principal: "s3.amazonaws.com"
#       # SourceArn: !Sub 'arn:aws:s3:::${project}-scripts'
#       SourceArn: 'arn:aws:s3:::big-data-g5-data-lake-2'